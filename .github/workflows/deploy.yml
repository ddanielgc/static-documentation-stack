name: Deploy Docusaurus Site

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install
    
    - name: Select or Create Pulumi Stack
      run: |
        pulumi stack select dev || pulumi stack init dev
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

    - name: Build the Docusaurus site
      run: npm run build

    - name: Deploy to AWS using Pulumi and capture outputs
      id: pulumi_deploy
      run: |
        pulumi up --yes
        pulumi stack output cdnDistributionId --json > distribution_id.json
        echo "DISTRIBUTION_ID=$(cat distribution_id.json)" >> $GITHUB_ENV
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ env.DISTRIBUTION_ID }} \
          --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}