name: Documentation Update

on:
  repository_dispatch:
    types: [update-docs]

jobs:
  update-documentation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Documentation Repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.client_payload.branch_name }}  # Checkout the specific branch
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Ensure the correct branch is checked out
      run: |
        git checkout ${{ github.event.client_payload.branch_name }}
    
    - name: Log the Active Branch (Pre-Commit)
      run: |
        echo "Active branch before commit: $(git branch --show-current)"

    - name: Log the Branch Name
      run: |
        echo "Branch name: ${{ github.event.client_payload.branch_name }}"

    - name: Log the repo name
      run: |
        echo "Repo name: ${{ github.event.client_payload.repo_name }}"

    - name: Clone Source Repository
      run: |
        repo_name="${{ github.event.client_payload.repo_name }}"
        git clone https://x-access-token:${{ secrets.SOURCE_REPO_PAT }}@github.com/${repo_name}.git /tmp/source-repo
      
    - name: Copy Docs Folder from Source Repository
      run: |
        repo_name="${{ github.event.client_payload.repo_name }}"
        repo_name_only="${repo_name##*/}"

        echo "Copying documentation from ${repo_name_only}..."

        if [ -d "/tmp/source-repo/docs" ] && [ "$(ls -A /tmp/source-repo/docs)" ]; then
          mkdir -p "docusaurus-site/docs/${repo_name_only}"
          cp -R /tmp/source-repo/docs/* "docusaurus-site/docs/${repo_name_only}/"
          echo "Documentation from ${repo_name_only} has been copied."
        else
          echo "No documentation to copy. The docs folder is either missing or empty."
        fi

    # - name: Update Docusaurus Config and Sidebar
    #   run: node .github/scripts/updateDocConfig.js
    - name: List Files in Docusaurus Site
      run: ls -al docusaurus-site/docs

    - name: Log Current Directory
      run: pwd

    - name: Install Dependencies
      run: npm install

    - name: Update Sidebars for OpenAPI
      working-directory: ${{ github.workspace }}
      run: |
        repo_name="${{ github.event.client_payload.repo_name }}"
        repo_name_only="${repo_name##*/}"

        npx ts-node -P ./tsconfig.json .github/scripts/updateSideBar.ts $repo_name_only
    
    - name: Commit and Push Changes
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        repo_name="${{ github.event.client_payload.repo_name }}"
        repo_name_only="${repo_name##*/}"

        git add docusaurus-site/sidebars.ts
        git add docusaurus-site/docs/${repo_name_only}
        
        git commit -m "Updated documentation for ${{ github.event.client_payload.repo_name }}"
        
        git push origin HEAD:${{ github.event.client_payload.branch_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Clean Up Temporary Directory
      run: |
        rm -rf /tmp/source-repo

    - name: Trigger Deploy Workflow
      uses: benc-uk/workflow-dispatch@v1
      if: success()
      with:
        workflow: deploy.yml  # The name of the workflow file to trigger
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.event.client_payload.branch_name }}
        
    - name: Debug Push
      run: |
        git log -1
        echo "Pushed to branch:" ${{ github.event.client_payload.branch_name }}
        echo "Current branch after push: $(git branch --show-current)"