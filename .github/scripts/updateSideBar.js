const fs = require('fs');
const path = require('path');

// Path to the sidebars.ts file
console.log('dir', __dirname);
const sidebarsPath = path.resolve(__dirname, '../../docusaurus-site/sidebars.ts');

console.log('sidebarsPath', sidebarsPath);

// Read the sidebars.ts file
let sidebarsContent = fs.readFileSync(sidebarsPath, 'utf-8');

// Function to add the OpenAPI link for the specific project
function addOpenApiLink(projectName) {
  console.log('projectName', projectName);
  const openApiLink = `
        {
          type: 'link',
          label: 'API Documentation',
          href: '/${projectName}-api/',
        },
  `;

  // Regex to find the project's category in the sidebar
  const projectCategoryRegex = new RegExp(
    `(\\{\\s*type: 'category',\\s*label: '${projectName.replace(
      /[-/\\^$*+?.()|[\]{}]/g,
      '\\$&'
    )}',\\s*items: \\[)([^]*?)(\\]\\s*\\},)`,
    'gm'
  );

  if (sidebarsContent.match(projectCategoryRegex)) {
    console.log('if');
    // If the project category already exists, update it
    sidebarsContent = sidebarsContent.replace(
      projectCategoryRegex,
      `$1$2${openApiLink}$3`
    );
  } else {
    console.log('else');
    // If the project category does not exist, create it
    const newCategory = `
    {
      type: 'category',
      label: '${projectName}',
      items: [
        {
          type: 'autogenerated',
          dirName: '${projectName}',
        },
        ${openApiLink}
      ],
    },`;

    // Ensure there's a comma before adding a new category
    sidebarsContent = sidebarsContent.replace(
      /(tutorialSidebar: \[)([^]*?)(\],)/,
      (match, p1, p2, p3) => {
        return `${p1}${p2.trim().endsWith(',') ? p2 : `${p2},`}${newCategory}${p3}`;
      }
    );
  }

  console.log(`Content is:  ${sidebarsContent}`);

  // Write the updated content back to sidebars.ts
  fs.writeFileSync(sidebarsPath, sidebarsContent);
}

// Example usage: Add a link for the triggered project
const triggeredProjectName = process.argv[2]; // Pass project name as argument
addOpenApiLink(triggeredProjectName);
